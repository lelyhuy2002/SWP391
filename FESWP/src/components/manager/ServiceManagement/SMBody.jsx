import React, { useState } from 'react';
import './SMBody.css';

const services = [
  {
    name: 'X√©t nghi·ªám m√°u t·ªïng qu√°t',
    desc: 'X√©t nghi·ªám c√°c ch·ªâ s·ªë c∆° b·∫£n trong m√°u',
    category: 'Huy·∫øt h·ªçc',
    price: 150000,
    time: 30,
    orders: 45,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'X-quang ph·ªïi',
    desc: 'Ch·ª•p X-quang ki·ªÉm tra t√¨nh tr·∫°ng ph·ªïi',
    category: 'Ch·∫©n ƒëo√°n h√¨nh ·∫£nh',
    price: 200000,
    time: 15,
    orders: 32,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'Si√™u √¢m b·ª•ng t·ªïng qu√°t',
    desc: 'Si√™u √¢m ki·ªÉm tra c√°c c∆° quan trong b·ª•ng',
    category: 'Ch·∫©n ƒëo√°n h√¨nh ·∫£nh',
    price: 300000,
    time: 45,
    orders: 28,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'X√©t nghi·ªám n∆∞·ªõc ti·ªÉu',
    desc: 'Ph√¢n t√≠ch c√°c ch·ªâ s·ªë trong n∆∞·ªõc ti·ªÉu',
    category: 'Huy·∫øt h·ªçc',
    price: 80000,
    time: 20,
    orders: 15,
    status: 'T·∫°m d·ª´ng',
  },
  {
    name: 'ƒêi·ªán tim',
    desc: 'ƒêo v√† ghi l·∫°i ho·∫°t ƒë·ªông ƒëi·ªán c·ªßa tim',
    category: 'Tim m·∫°ch',
    price: 120000,
    time: 20,
    orders: 38,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'Kh√°m da li·ªÖu',
    desc: 'T∆∞ v·∫•n v√† kh√°m c√°c b·ªánh v·ªÅ da',
    category: 'Da li·ªÖu',
    price: 100000,
    time: 25,
    orders: 20,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'T∆∞ v·∫•n t√¢m l√Ω',
    desc: 'H·ªó tr·ª£ t√¢m l√Ω c√° nh√¢n v√† gia ƒë√¨nh',
    category: 'T√¢m l√Ω h·ªçc',
    price: 250000,
    time: 60,
    orders: 12,
    status: 'T·∫°m d·ª´ng',
  },
  {
    name: 'Kh√°m n·ªôi t·ªïng qu√°t',
    desc: 'Kh√°m s·ª©c kh·ªèe t·ªïng qu√°t',
    category: 'N·ªôi khoa',
    price: 180000,
    time: 30,
    orders: 50,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'Si√™u √¢m tim',
    desc: 'Ki·ªÉm tra h√¨nh ·∫£nh tim b·∫±ng si√™u √¢m',
    category: 'Tim m·∫°ch',
    price: 350000,
    time: 40,
    orders: 18,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'X√©t nghi·ªám HIV',
    desc: 'Ph√°t hi·ªán nhanh kh√°ng th·ªÉ HIV',
    category: 'X√©t nghi·ªám nhanh',
    price: 90000,
    time: 10,
    orders: 22,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'Kh√°m s·∫£n ph·ª• khoa',
    desc: 'Kh√°m ƒë·ªãnh k·ª≥ ph·ª• n·ªØ',
    category: 'S·∫£n ph·ª• khoa',
    price: 220000,
    time: 30,
    orders: 27,
    status: 'T·∫°m d·ª´ng',
  },
  {
    name: 'N·ªôi soi tai m≈©i h·ªçng',
    desc: 'Ki·ªÉm tra tai, m≈©i, h·ªçng b·∫±ng n·ªôi soi',
    category: 'Tai m≈©i h·ªçng',
    price: 270000,
    time: 25,
    orders: 19,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'Kh√°m m·∫Øt',
    desc: 'ƒêo th·ªã l·ª±c v√† kh√°m m·∫Øt t·ªïng qu√°t',
    category: 'Nh√£n khoa',
    price: 95000,
    time: 20,
    orders: 33,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'X√©t nghi·ªám ƒë∆∞·ªùng huy·∫øt',
    desc: 'ƒêo l∆∞·ª£ng ƒë∆∞·ªùng trong m√°u nhanh',
    category: 'N·ªôi ti·∫øt',
    price: 60000,
    time: 10,
    orders: 44,
    status: 'ƒêang ho·∫°t ƒë·ªông',
  },
  {
    name: 'Kh√°m nhi',
    desc: 'Kh√°m t·ªïng qu√°t cho tr·∫ª nh·ªè',
    category: 'Nhi khoa',
    price: 150000,
    time: 30,
    orders: 26,
    status: 'T·∫°m d·ª´ng',
  },
];

const formatCurrency = (number) => {
  return `$ ${number.toLocaleString('vi-VN')} VNƒê`;
};

const SMBody = () => {
  const [currentPage, setCurrentPage] = useState(1);
  const servicesPerPage = 5;

  const totalPages = Math.ceil(services.length / servicesPerPage);
  const startIndex = (currentPage - 1) * servicesPerPage;
  const currentServices = services.slice(startIndex, startIndex + servicesPerPage);

  const goToPage = (page) => {
    if (page >= 1 && page <= totalPages) setCurrentPage(page);
  };

  return (
    <div className="sm-body">
      <div className="sm-body-header">
        <h2>Danh s√°ch d·ªãch v·ª• ({services.length})</h2>
      </div>

      <table className="sm-table">
        <thead>
          <tr>
            <th>T√äN D·ªäCH V·ª§</th>
            <th>DANH M·ª§C</th>
            <th>GI√Å</th>
            <th>TH·ªúI GIAN</th>
            <th>L∆Ø·ª¢T ƒê·∫∂T</th>
            <th>TR·∫†NG TH√ÅI</th>
            <th>THAO T√ÅC</th>
          </tr>
        </thead>
        <tbody>
          {currentServices.map((item, index) => (
            <tr key={index}>
              <td>
                <strong>{item.name}</strong>
                <div className="desc">{item.desc}</div>
              </td>
              <td>
                <span className="category-tag">{item.category}</span>
              </td>
              <td className="price">{formatCurrency(item.price)}</td>
              <td>
                <span className="time">
                  <span className="clock-icon">‚è±</span>
                  {item.time} ph√∫t
                </span>
              </td>
              <td>{item.orders} l∆∞·ª£t</td>
              <td>
                <span className={`status ${item.status === 'ƒêang ho·∫°t ƒë·ªông' ? 'active' : 'inactive'}`}>
                  {item.status}
                </span>
              </td>
              <td className="actions">
                <span className="edit-icon">‚úèÔ∏è</span>
                <span className="delete-icon">üóëÔ∏è</span>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <div className="pagination">
        <button onClick={() => goToPage(currentPage - 1)} disabled={currentPage === 1}>
          ‚Äπ Tr∆∞·ªõc
        </button>
        {[...Array(totalPages)].map((_, i) => (
          <button
            key={i}
            className={currentPage === i + 1 ? 'page-number active' : 'page-number'}
            onClick={() => goToPage(i + 1)}
          >
            {i + 1}
          </button>
        ))}
        <button onClick={() => goToPage(currentPage + 1)} disabled={currentPage === totalPages}>
          Sau ‚Ä∫
        </button>
      </div>
    </div>
  );
};

export default SMBody;
