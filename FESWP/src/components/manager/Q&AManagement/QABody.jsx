import React, { useState } from 'react';
import './QABody.css';

const allQAData = [
  {
    id: 1,
    question: 'T√¥i c√≥ n√™n x√©t nghi·ªám m√°u ƒë·ªãnh k·ª≥ kh√¥ng?',
    author: 'Nguy·ªÖn VƒÉn A',
    date: '2024-06-03',
    category: 'X√©t nghi·ªám',
    status: 'ƒê√£ duy·ªát',
    isFAQ: true,
    likes: 15,
    answer: {
      content: 'X√©t nghi·ªám m√°u ƒë·ªãnh k·ª≥ r·∫•t quan tr·ªçng ƒë·ªÉ ph√°t hi·ªán s·ªõm c√°c v·∫•n ƒë·ªÅ s·ª©c kh·ªèe. B·∫°n n√™n th·ª±c hi·ªán √≠t nh·∫•t 1 l·∫ßn/nƒÉm.',
      doctor: 'BS. Tr·∫ßn Th·ªã B',
    }
  },
  {
    id: 2,
    question: 'Tri·ªáu ch·ª©ng ƒëau ng·ª±c c√≥ nguy hi·ªÉm kh√¥ng?',
    author: 'L√™ Th·ªã C',
    date: '2024-06-04',
    category: 'T√¨m m·∫°ch',
    status: 'Ch·ªù duy·ªát',
    isFAQ: false,
    likes: 0,
    answer: null,
  },
  {
    id: 3,
    question: 'L√†m th·∫ø n√†o ƒë·ªÉ gi·∫£m stress hi·ªáu qu·∫£?',
    author: 'Ho√†ng Minh D',
    date: '2024-06-02',
    category: 'T√¢m l√Ω',
    status: 'ƒê√£ duy·ªát',
    isFAQ: true,
    likes: 23,
    answer: {
      content: 'C√≥ nhi·ªÅu c√°ch gi·∫£m stress nh∆∞ thi·ªÅn ƒë·ªãnh, t·∫≠p th·ªÉ d·ª•c, nghe nh·∫°c, v√† duy tr√¨ l·ªëi s·ªëng l√†nh m·∫°nh.',
      doctor: 'BS. Ph·∫°m VƒÉn E',
    }
  },
  // üëâ Th√™m gi·∫£ l·∫≠p 3 c√¢u n·ªØa ƒë·ªÉ test ph√¢n trang:
  {
    id: 4,
    question: 'Dinh d∆∞·ª°ng cho tr·∫ª nh·ªè n√™n nh∆∞ th·∫ø n√†o?',
    author: 'Tr·∫ßn Th·ªã H',
    date: '2024-06-01',
    category: 'Dinh d∆∞·ª°ng',
    status: 'Ch·ªù duy·ªát',
    isFAQ: false,
    likes: 0,
    answer: null,
  },
  {
    id: 5,
    question: 'T√¥i c√≥ c·∫ßn ti√™m ph√≤ng sau khi kh·ªèi b·ªánh kh√¥ng?',
    author: 'Ng√¥ VƒÉn T',
    date: '2024-05-31',
    category: 'Thu·ªëc',
    status: 'ƒê√£ duy·ªát',
    isFAQ: false,
    likes: 5,
    answer: {
      content: 'T√πy v√†o lo·∫°i b·ªánh, nh∆∞ng nhi·ªÅu tr∆∞·ªùng h·ª£p n√™n ti√™m ph√≤ng ƒë·ªÉ b·∫£o v·ªá l√¢u d√†i.',
      doctor: 'BS. L√™ Minh A',
    }
  },
  {
    id: 6,
    question: 'ƒêau ƒë·∫ßu k√©o d√†i c√≥ c·∫ßn ƒëi kh√°m kh√¥ng?',
    author: 'B√πi Minh K',
    date: '2024-05-30',
    category: 'T√¢m l√Ω',
    status: 'Ch·ªù duy·ªát',
    isFAQ: false,
    likes: 0,
    answer: null,
  }
];

const QABody = () => {
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 3;
  const totalPages = Math.ceil(allQAData.length / itemsPerPage);
  const startIdx = (currentPage - 1) * itemsPerPage;
  const currentData = allQAData.slice(startIdx, startIdx + itemsPerPage);

  return (
    <>
      <div className="qa-body">
        {currentData.map((qa) => (
          <div key={qa.id} className="qa-card">
            {/* Header */}
            <div className="qa-card-header">
              <div className="qa-question-title">
                <span className="qa-icon">‚ùì</span>
                <strong>{qa.question}</strong>
                {qa.isFAQ && <span className="qa-badge">FAQ</span>}
              </div>
              <div className="qa-meta">
                <span className={`qa-status ${qa.status === 'ƒê√£ duy·ªát' ? 'approved' : 'pending'}`}>{qa.status}</span>
                {qa.status === 'ƒê√£ duy·ªát' && (
                  <span className="qa-likes">{qa.likes} l∆∞·ª£t th√≠ch</span>
                )}
              </div>
            </div>

            {/* Subinfo */}
            <div className="qa-subinfo">
              <span>üë§ {qa.author}</span>
              <span>üìÖ {qa.date}</span>
              <span className="qa-category">{qa.category}</span>
            </div>

            {/* Answer or form */}
            {qa.answer ? (
              <div className="qa-answer-box">
                ‚úÖ {qa.answer.content}
                <div className="qa-doctor">Tr·∫£ l·ªùi b·ªüi: {qa.answer.doctor}</div>
              </div>
            ) : (
              <div className="qa-reply-box">
                <label>Tr·∫£ l·ªùi c√¢u h·ªèi:</label>
                <textarea placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi..." />
                <select>
                  <option>Ch·ªçn t∆∞ v·∫•n vi√™n tr·∫£ l·ªùi</option>
                  <option>BS. Tr·∫ßn Th·ªã B</option>
                  <option>BS. Ph·∫°m VƒÉn E</option>
                </select>
                <div className="qa-actions">
                  <button className="btn success">‚úî Duy·ªát v√† ƒëƒÉng</button>
                  <button className="btn danger">‚úñ T·ª´ ch·ªëi</button>
                </div>
              </div>
            )}

            {/* Footer */}
            <div className="qa-footer">
              {qa.isFAQ && <button className="btn-outline">B·ªè kh·ªèi FAQ</button>}
              <span className="qa-id">ID: {qa.id}</span>
            </div>
          </div>
        ))}
      </div>

      {/* PH√ÇN TRANG */}
      <div className="qa-pagination">
        <button
          className="page-btn"
          disabled={currentPage === 1}
          onClick={() => setCurrentPage(currentPage - 1)}
        >
          ‚Äπ Tr∆∞·ªõc
        </button>

        {[...Array(totalPages)].map((_, i) => (
          <button
            key={i + 1}
            className={`page-number ${currentPage === i + 1 ? 'active' : ''}`}
            onClick={() => setCurrentPage(i + 1)}
          >
            {i + 1}
          </button>
        ))}

        <button
          className="page-btn"
          disabled={currentPage === totalPages}
          onClick={() => setCurrentPage(currentPage + 1)}
        >
          Sau ‚Ä∫
        </button>
      </div>
    </>
  );
};

export default QABody;
